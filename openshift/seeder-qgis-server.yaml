apiVersion: v1
kind: Template
metadata:
  name: qgis-server-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null 
    labels:
      io.kompose.service: qgis-server 
    name: qgis-server 
  spec:
    ports:
    - name: 80-tcp 
      port: 80
      protocol: TCP 
      targetPort: 80  
    selector:
      parent: qgis-server 
    sessionAffinity: None 
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "qgs-resources-claim"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 3Gi
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: qgis-server
  spec:
    replicas: 1 
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          parent: qgis-server
      spec:
        containers:
        - image: docker-registry.default.svc:5000/gdi/qgis-server
          name: qgis-server
          ports:
          - containerPort: 80
            protocol: TCP 
          resources:
            limits:
              memory: 4Gi 
          selector:
            parent: qgis-server
          env:
          - name: LOG_LEVEL
            value: '2' 
          - name: QGIS_FCGI_MIN_PROCESSES
            value: '0' 
          - name: QGIS_FCGI_MAX_PROCESSES
            value: '4' 
          volumeMounts:
          - mountPath: /data
            name: qgs-resources
          restartPolicy: Never
        volumes:
        - name: qgs-resources
          persistentVolumeClaim:
            claimName: qgs-resources-claim
